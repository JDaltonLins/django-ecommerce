# Generated by Django 4.1 on 2022-08-15 20:32

from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("imagem", models.ImageField(blank=True, upload_to="usuarios")),
                ("moldura", models.ImageField(blank=True, upload_to="molduras")),
                ("color", models.CharField(default="000000", max_length=6)),
                ("pontos", models.IntegerField(default=0)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EstoqueProduto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ativo", models.BooleanField(default=True)),
                ("referencia", models.CharField(max_length=100)),
                ("nome", models.CharField(max_length=100)),
                ("informacoes", models.TextField(blank=True)),
                ("preco", models.DecimalField(decimal_places=2, max_digits=7)),
                ("custo", models.DecimalField(decimal_places=2, max_digits=7)),
                ("descricao", models.TextField()),
                ("usa_serial", models.BooleanField(default=False)),
                ("ean", models.CharField(blank=True, max_length=13)),
                ("imagem", models.ImageField(upload_to="produtos")),
                ("data_cadastro", models.DateTimeField(auto_now_add=True)),
                ("data_atualizacao", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Produto",
                "verbose_name_plural": "Produtos",
                "ordering": ["descricao"],
            },
        ),
        migrations.CreateModel(
            name="EstoqueProdutoCategoria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ativo", models.BooleanField(default=True)),
                ("nome", models.CharField(max_length=100)),
                ("mostrar_inicio", models.BooleanField(default=False)),
                ("data_cadastro", models.DateTimeField(auto_now_add=True)),
                ("data_atualizacao", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Categoria",
                "verbose_name_plural": "Categorias",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="EstoqueProdutoImagem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("imagem", models.ImageField(upload_to="produtos")),
            ],
            options={
                "verbose_name": "Image de Produto",
                "verbose_name_plural": "Imagens de Produtos",
            },
        ),
        migrations.CreateModel(
            name="EstoqueProdutoSubcategoria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ativo", models.BooleanField(default=True)),
                ("nome", models.CharField(max_length=100)),
                ("data_cadastro", models.DateTimeField(auto_now_add=True)),
                ("data_atualizacao", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Subcategoria",
                "verbose_name_plural": "Subcategorias",
            },
        ),
        migrations.CreateModel(
            name="EstoqueProdutoTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="PedidoPagamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("0", "Dinheiro"),
                            ("1", "Transferência"),
                            ("2", "Cartão de Crédito"),
                            ("3", "Cartão de Débito"),
                            ("4", "Boleto"),
                            ("5", "Pix"),
                        ],
                        max_length=1,
                    ),
                ),
                ("valor", models.DecimalField(decimal_places=2, max_digits=7)),
                ("extra", models.TextField(blank=True)),
                ("data_iniciado", models.DateTimeField(auto_now_add=True)),
                ("data_autorizacao", models.DateTimeField(blank=True, null=True)),
                ("data_captura", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="PedidoItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantidade",
                    models.IntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("preco", models.DecimalField(decimal_places=2, max_digits=7)),
                ("custo", models.DecimalField(decimal_places=2, max_digits=7)),
                (
                    "desconto",
                    models.DecimalField(decimal_places=2, default=0, max_digits=7),
                ),
                ("total", models.DecimalField(decimal_places=2, max_digits=7)),
                ("pontos", models.IntegerField(default=0)),
                (
                    "produto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="principal.estoqueproduto",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PedidoCupom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=100)),
                ("desconto", models.DecimalField(decimal_places=2, max_digits=7)),
                ("pontos", models.IntegerField(default=0)),
                ("data_inicio", models.DateTimeField(auto_now_add=True)),
                ("data_fim", models.DateTimeField(blank=True, null=True)),
                ("usado", models.BooleanField(default=False)),
                (
                    "max",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "categorias",
                    models.ManyToManyField(
                        blank=True, to="principal.estoqueprodutocategoria"
                    ),
                ),
                (
                    "produtos",
                    models.ManyToManyField(blank=True, to="principal.estoqueproduto"),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, to="principal.estoqueprodutotag"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Pedido",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.DateTimeField(auto_now_add=True)),
                ("total", models.DecimalField(decimal_places=2, max_digits=7)),
                (
                    "desconto",
                    models.DecimalField(decimal_places=2, default=0, max_digits=7),
                ),
                ("pontos", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[("A", "Aberto"), ("F", "Fechado"), ("C", "Cancelado")],
                        max_length=1,
                    ),
                ),
                (
                    "cliente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cupom",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="principal.pedidocupom",
                    ),
                ),
                ("items", models.ManyToManyField(to="principal.pedidoitem")),
                (
                    "pagamento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="principal.pedidopagamento",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EstoqueProdutoLoja",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantidade", models.IntegerField(default=0)),
                ("custo", models.DecimalField(decimal_places=2, max_digits=7)),
                ("data_cadastro", models.DateTimeField(auto_now_add=True)),
                ("data_atualizacao", models.DateTimeField(auto_now=True)),
                (
                    "produto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="principal.estoqueproduto",
                    ),
                ),
            ],
            options={
                "verbose_name": "Estoque em Loja",
                "verbose_name_plural": "Estoques em Loja",
                "ordering": ["produto"],
            },
        ),
        migrations.AddField(
            model_name="estoqueproduto",
            name="categoria",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                to="principal.estoqueprodutocategoria",
            ),
        ),
        migrations.AddField(
            model_name="estoqueproduto",
            name="imagens",
            field=models.ManyToManyField(
                blank=True, to="principal.estoqueprodutoimagem"
            ),
        ),
        migrations.AddField(
            model_name="estoqueproduto",
            name="subcategorias",
            field=models.ManyToManyField(
                blank=True, to="principal.estoqueprodutosubcategoria"
            ),
        ),
        migrations.AddField(
            model_name="estoqueproduto",
            name="tags",
            field=models.ManyToManyField(blank=True, to="principal.estoqueprodutotag"),
        ),
    ]
